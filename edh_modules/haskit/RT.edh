{##
 # This is the sentinel file stand in place of a host module that
 # should have been installed by the host interpreter, which contains
 # host procedures, classes and other artifacts defined via EHI
 # (which is obviously written in the host language i.e. Haskell)
 #
 # Execution of this module file is a sign showing that wrong Edh
 # interpreter is used to run the program.
 #}
if running!true # should be treated as false for proper control-flow analysis
then error( 'Missing host module: ' ++ __name__ )

# rest of the source here serves as meta documentation for aforementioned
# host artifacts, and is meant to be leveraged by IDE tools (such as els)
# with source code analysis capabilities, to aid the developers

export {

  {##
   # Read the contents of a file from local filesystem
   #}
  method readFile( name: 'String', binary: 'Bool' = false,
    dir: 'String' = NA ): 'String' | 'Blob' pass

  {##
   # Write some data into a file in local filesystem

The file will be overwritten.
   #}
  method writeFile( name: 'String', data: 'String' | 'Blob',
    dir: 'String' = NA ) pass

}
