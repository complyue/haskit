
import * 'haskit'

# %%

# import hasdim this way so:
#  *) all exported artifacts are directly available
#  *) all module level artifacts are available via `hd`
#  *) monkey-patching to the module object is possible
hd = { import * 'dim' }
# import effectful support for dtypes etc.
effect import * 'dim/effects'


# %%
nPoints = 500
nPhases = 8
x = arange( nPoints, dtype=f8 ) * nPhases / ( nPoints-1 )
xv = x * pi( nPoints, dtype=f8 )
ySin = sin( xv )
yCos = cos( xv )


# %%

for (defineAxis, plotWindow, **) from plot( 'demoPlotGroup1' ) do {
  sharedX = defineAxis( 'x' )
  sharedY = defineAxis( 'y' )

  for (defineDataSource, postJsCode, **) from plotWindow( 'demoPlotWin1' ) do {
    ds = defineDataSource(
      x= x, sin= ySin, cos= yCos,
    )

    postJsCode( js!expr {
        const f1 = plt.figure( {
            title: 'SIN Figure',
            toolbar_location: 'left',
            sizing_mode: 'stretch_both',
        } )
        f1.line( {
            source: {$ ds $},
            x: { field: 'x' },
            y: { field: 'sin' },
            color: '#1122cc',
            alpha: 0.7,
            legend: 'SIN Curve',
        } )
        syncRange( f1.x_range, {$ sharedX $} )
        syncRange( f1.y_range, {$ sharedY $} )

        const f2 = plt.figure( {
            title: 'COS Figure',
            toolbar_location: 'right',
            sizing_mode: 'stretch_both',
        } )
        f2.line( {
            source: {$ ds $},
            x: { field: 'x' },
            y: { field: 'cos' },
            color: '#11cc22',
            alpha: 0.7,
            legend: 'COS Curve',
        } )
        {$snippet$ 'for ( let g of f2.select( bkh.Legend ) )' $} {
          g.location = 'top_left'
          g.click_policy = 'hide'
          g.background_fill_alpha = 0.6
        }
        syncRange( f2.x_range, {$ sharedX $} )
        syncRange( f2.y_range, {$ sharedY $} )

        plt.show( plt.gridplot(
            [ [ f1 ], [ f2 ] ], {
              merge_tools: false,
              sizing_mode: 'stretch_both',
          } ), document.body )

    } )

  }

}
