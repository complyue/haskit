
# import hasdim this way so:
#  *) all exported artifacts are directly available
#  *) all module level artifacts are available via `hd`
#  *) monkey-patching to the module object is possible
hd = { import * 'dim' }
# support for dtypes etc. are effectful
effect import * 'dim/effects'

import * 'haskit'


# %%
nPoints = 500
nPhases = 8
x = ( arange( nPoints, dtype=f8 ) *
  nPhases * pi( nPoints, dtype=f8 ) / ( nPoints-1 ) )
ySin = sin( x )
yCos = cos( x )


# %%

plot( hski, 'demoPlotGroup1', () => {
    sharedX = perform defineAxis( 'x' )
    sharedY = perform defineAxis( 'y' )

    perform plotWindow( 'demoPlotWin1', () => {
        ds = perform defineDataSource(
          x= x, sin= ySin, cos= yCos,
        )

        perform postJsCode( js!expr {
            let fig = plt.figure( {
                title: 'SIN Figure',
                toolbar_location: 'left',
                sizing_mode: 'stretch_both',
            } )
            fig.line( {
                source: plotData[ {$ ds $} ],
                x: { field: 'x' },
                y: { field: 'sin' },
                color: '#1122cc',
                alpha: 0.7,
                legend: 'SIN Curve',
            } )
            syncRange( fig.x_range, {$ sharedX $} )
            syncRange( fig.y_range, {$ sharedY $} )

            plt.show( fig, document.body )

            void 0
        } )

    } )

} )
